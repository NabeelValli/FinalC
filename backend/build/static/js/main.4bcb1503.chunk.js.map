{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","unit","u","WeatherApp","useState","query","setQuery","w","setWeather","icn","setIcon","source","className","type","placeholder","onChange","e","target","value","maxLength","pattern","onKeyPress","evt","key","document","getElementsByClassName","checked","err","console","log","fetch","then","res","json","result","weather","icon","catch","main","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuild","Date","Math","round","temp","src","alt","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4bcb1503.chunk.js","sourcesContent":["\r\nimport './App.css';\r\nimport React, { useState } from 'react';\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst api = {\r\n  key: \"a8dbabeb48ef2565ae8f17d6ac7d4d4a\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\nlet unit = 'metric';\r\nvar u = 'C';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={WeatherApp} />\r\n          <Route exact path=\"/home\" component={WeatherApp} />\r\n          <Route exact path=\"/404\" component={NotFound} />\r\n          {/* <Redriect from='/404/' to=\"/home/\" /> */}\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nfunction WeatherApp() {\r\n  const [query, setQuery] = useState('');\r\n  const [w, setWeather] = useState({});\r\n  const [icn, setIcon] = useState('');\r\n  //const [cee, setCee] = useState('');\r\n\r\n\r\n\r\n\r\n  const search = evt => {\r\n    if (evt.key === \"Enter\") {\r\n\r\n\r\n      try {\r\n\r\n\r\n        try {\r\n          if (document.getElementsByClassName(\"ccBox\")[0].checked) {\r\n            unit = 'imperial'\r\n            u = 'F';\r\n          }\r\n          else {\r\n            unit = 'metric';\r\n            u = 'C';\r\n          }\r\n        }\r\n\r\n        catch (err) {\r\n          console.log(\"Same undefined thing\");\r\n          unit = 'metric';\r\n          u = 'C';\r\n        }\r\n\r\n\r\n\r\n        fetch(`${api.base}weather?zip=${query},ZA&units=${unit}&appid=${api.key}`)\r\n\r\n          .then(res => res.json())\r\n          .then(result => {\r\n            setWeather(result);\r\n\r\n            setIcon(result.weather[0].icon);\r\n            setQuery('')\r\n          }).catch(err => {\r\n            console.log(err);\r\n            setQuery('');\r\n          });\r\n      }\r\n      catch (err) {\r\n\r\n        console.log(\"OUR ERROR\");\r\n        console.log(err);\r\n        //Put pop up here\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  const dateBuild = (d) => {\r\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\",\r\n      \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day}, ${date} ${month} ${year}`;\r\n\r\n  }\r\n\r\n  let source = `http://openweathermap.org/img/wn/${icn}@2x.png`;\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <main>\r\n\r\n        <div className=\"search-box\">\r\n          <input type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search...\"\r\n            onChange={e => setQuery(e.target.value)}\r\n            value={query}\r\n            maxLength=\"4\"\r\n            pattern=\"[0-9]{4}\"\r\n            onKeyPress={search}></input>\r\n        </div>\r\n        {(typeof w.main != 'undefined') ? (\r\n          <div><div className=\"locationBox\">\r\n            <div className=\"location\">{w.name}, {w.sys.country}</div>\r\n            <div className=\"date\">{dateBuild(new Date())}</div>\r\n\r\n\r\n\r\n            <div className=\"tog\">\r\n              &#176;C &nbsp;\r\n\r\n              <label className=\"switch\">\r\n                <input className=\"ccBox\" type=\"checkbox\" />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n\r\n&nbsp;\r\n&#176;F\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"weatherBox\">\r\n\r\n              <div className=\"temp\">{Math.round(w.main.temp)} &#176;{u}</div>\r\n\r\n\r\n              <div className=\"weather\">{w.weather[0].main}</div>\r\n\r\n\r\n              <div className=\"icon\"><img className=\"img\" src={source} alt=\"alternatetext\"></img></div>\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n        ) : ('')}\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <main>\r\n        <div className=\"weatherBox\">\r\n          <div className=\"temp\">404</div>\r\n          <div className=\"weather\">Oops... seems something went wrong. Don't worry we'll redirect you now.</div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}